name: pipeline-checker
on: [workflow_dispatch, push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install root dev tools
        run: npm install --legacy-peer-deps

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install --legacy-peer-deps

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install --legacy-peer-deps

      # Lint HTML files (global)
      - name: Run HTMLHint
        run: npx htmlhint "./frontend/**/*.html" "./backend/**/*.html" --ignore "coverage/**"

      # Lint CSS files (global)
      - name: Run Stylelint
        run: npx stylelint "**/*.css" --ignore-pattern "coverage/**"

      # ESLint for backend
      - name: ESLint Backend
        working-directory: ./backend
        run: npx eslint "**/*.{js,ts}" --ignore-pattern "coverage/**"

      # ESLint for frontend
      - name: ESLint Frontend
        working-directory: ./frontend
        run: npx eslint "**/*.{js,ts,jsx,tsx}" --ignore-pattern "coverage/**"

      # Optional root ESLint if configs exist at root
      - name: Run ESLint (root)
        run: npx eslint "**/*.{js,ts,jsx,tsx}" --ignore-pattern "coverage/**"

      # Run Jest for backend
      - name: Run Jest tests (backend)
        working-directory: ./backend
        run: npx jest --coverage

      # Security audit (root)
      - name: Run npm audit
        run: npm audit --audit-level=low

      # Build frontend
      - name: Build Next.js frontend
        working-directory: ./frontend
        run: npm run build

      # Upload code coverage as artifact
      - name: Upload coverage folder as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifact
          path: backend/coverage/
